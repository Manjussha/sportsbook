{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Manjusha\\\\Downloads\\\\frontendLTS\\\\src\\\\Containers\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Form, Input, Button, Checkbox, message } from \"antd\";\nimport axios from \"axios\";\nimport \"../Containers/Login.css\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst layout = {\n  labelCol: {\n    span: 8\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 2,\n    span: 16\n  }\n};\n\nconst Login = props => {\n  _s();\n\n  let history = useHistory();\n  const [Credential, setCredential] = useState({});\n  const [showErrorMsg, setshowErrorMsg] = useState(false);\n  const [storeUserData, setstoreUserData] = useState({});\n  const [showLockAccountMsg, setshowLockAccountMsg] = useState(false);\n\n  const FormButton = props => /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"button\",\n    className: \"row\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n\n  const FormInput = props => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: props.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: props.type,\n      placeholder: props.placeholder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n\n  const onFinish = values => {\n    console.log(\"Success:\", values);\n    setCredential(values);\n    checkForLogin(values);\n  };\n\n  const onFinishFailed = errorInfo => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  const checkForLogin = requestedData => {\n    axios.post(\"http://45.79.121.209:8000/api/v1/api-token-auth/\", {\n      username: requestedData.username,\n      password: requestedData.password\n    }).then(response => {\n      console.log(\"Successful\", response, \"resposeType\", response.type);\n      message.success(\"Successful login !! just Wait for few Seconds to sync with your Account !!\");\n      setshowErrorMsg(false);\n      navigateToHome(response.data);\n    }, error => {\n      console.log(error);\n\n      if (error) {\n        message.error(\"login  Failed !!\");\n        setshowErrorMsg(true);\n      }\n    });\n  };\n\n  function navigateToHome(userData) {\n    console.log(\"userInformation :\", userData);\n    const userType = userData.role;\n\n    if (userType) {\n      console.log(\"user role is \", userType);\n      const selectedGameToStoreString = JSON.stringify(userData);\n      localStorage.setItem(\"userDetails\", selectedGameToStoreString);\n      console.log(\"userInformationStored\", selectedGameToStoreString);\n\n      if (userType) {\n        history.push(`/home/`);\n      }\n    } else {\n      setshowLockAccountMsg(true);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"container\",\n      className: \"login__container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"loginform\",\n        children: [console.log(\"cred\", Credential), /*#__PURE__*/_jsxDEV(\"h2\", {\n          id: \"headerTitle\",\n          children: \"Login form \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loginINForm\",\n          children: [/*#__PURE__*/_jsxDEV(Form, { ...layout,\n            style: {\n              padding: \"15px\"\n            } // name=\"basic\"\n            ,\n            initialValues: {\n              remember: true\n            },\n            onFinish: onFinish,\n            onFinishFailed: onFinishFailed,\n            children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n              label: \"Username\",\n              name: \"username\",\n              rules: [{\n                required: true,\n                message: \"Please input your username!\"\n              }],\n              children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n              label: \"Password\",\n              name: \"password\",\n              rules: [{\n                required: true,\n                message: \"Please input your password!\"\n              }],\n              children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...tailLayout,\n              name: \"remember\",\n              valuePropName: \"checked\",\n              children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                children: \"Remember me\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...tailLayout,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"primary\",\n                htmlType: \"submit\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), showErrorMsg ? /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"red\"\n            },\n            children: \"*please check your Password \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this) : \"\", showLockAccountMsg ? /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"red\"\n            },\n            children: \"Your account is locked due to some unwanted Action were perfomrmed !! please contact with relavent autorized person !!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this) : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}; // export default withRouter(Login);\n\n\n_s(Login, \"Y6N8lzZWOCgsNoEE6ZeA6b8R7QY=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/Manjusha/Downloads/frontendLTS/src/Containers/Login.js"],"names":["React","useState","Form","Input","Button","Checkbox","message","axios","useHistory","layout","labelCol","span","wrapperCol","tailLayout","offset","Login","props","history","Credential","setCredential","showErrorMsg","setshowErrorMsg","storeUserData","setstoreUserData","showLockAccountMsg","setshowLockAccountMsg","FormButton","title","FormInput","description","type","placeholder","onFinish","values","console","log","checkForLogin","onFinishFailed","errorInfo","requestedData","post","username","password","then","response","success","navigateToHome","data","error","userData","userType","role","selectedGameToStoreString","JSON","stringify","localStorage","setItem","push","padding","remember","required","color"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Form, Input, Button, Checkbox, message } from \"antd\";\r\nimport axios from \"axios\";\r\nimport \"../Containers/Login.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nconst layout = {\r\n  labelCol: { span: 8 },\r\n  wrapperCol: { span: 16 },\r\n};\r\n\r\nconst tailLayout = {\r\n  wrapperCol: { offset: 2, span: 16 },\r\n};\r\n\r\nconst Login = (props) => {\r\n  let history = useHistory();\r\n  const [Credential, setCredential] = useState({});\r\n  const [showErrorMsg, setshowErrorMsg] = useState(false);\r\n  const [storeUserData, setstoreUserData] = useState({});\r\n  const [showLockAccountMsg, setshowLockAccountMsg] = useState(false);\r\n  const FormButton = (props) => (\r\n    <div id=\"button\" className=\"row\">\r\n      <button>{props.title}</button>\r\n    </div>\r\n  );\r\n\r\n  const FormInput = (props) => (\r\n    <div className=\"row\">\r\n      <label>{props.description}</label>\r\n      <input type={props.type} placeholder={props.placeholder} />\r\n    </div>\r\n  );\r\n  const onFinish = (values) => {\r\n    console.log(\"Success:\", values);\r\n    setCredential(values);\r\n    checkForLogin(values);\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  const checkForLogin = (requestedData) => {\r\n    axios\r\n      .post(\"http://45.79.121.209:8000/api/v1/api-token-auth/\", {\r\n        username: requestedData.username,\r\n        password: requestedData.password,\r\n      })\r\n      .then(\r\n        (response) => {\r\n          console.log(\"Successful\", response, \"resposeType\", response.type);\r\n          message.success(\r\n            \"Successful login !! just Wait for few Seconds to sync with your Account !!\"\r\n          );\r\n\r\n          setshowErrorMsg(false);\r\n          navigateToHome(response.data);\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n          if (error) {\r\n            message.error(\"login  Failed !!\");\r\n            setshowErrorMsg(true);\r\n          }\r\n        }\r\n      );\r\n  };\r\n  function navigateToHome(userData) {\r\n    console.log(\"userInformation :\", userData);\r\n    const userType = userData.role;\r\n    if (userType) {\r\n      console.log(\"user role is \", userType);\r\n      const selectedGameToStoreString = JSON.stringify(userData);\r\n      localStorage.setItem(\"userDetails\", selectedGameToStoreString);\r\n      console.log(\"userInformationStored\", selectedGameToStoreString);\r\n\r\n      if (userType) {\r\n        history.push(`/home/`);\r\n      }\r\n    } else {\r\n      setshowLockAccountMsg(true);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div id=\"container\" className=\"login__container\">\r\n        <div id=\"loginform\">\r\n          {console.log(\"cred\", Credential)}\r\n          <h2 id=\"headerTitle\">Login form </h2>\r\n          <div className=\"loginINForm\">\r\n            <Form\r\n              {...layout}\r\n              style={{ padding: \"15px\" }}\r\n              // name=\"basic\"\r\n              initialValues={{ remember: true }}\r\n              onFinish={onFinish}\r\n              onFinishFailed={onFinishFailed}\r\n            >\r\n              <Form.Item\r\n                label=\"Username\"\r\n                name=\"username\"\r\n                rules={[\r\n                  { required: true, message: \"Please input your username!\" },\r\n                ]}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                label=\"Password\"\r\n                name=\"password\"\r\n                rules={[\r\n                  { required: true, message: \"Please input your password!\" },\r\n                ]}\r\n              >\r\n                <Input.Password />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                {...tailLayout}\r\n                name=\"remember\"\r\n                valuePropName=\"checked\"\r\n              >\r\n                <Checkbox>Remember me</Checkbox>\r\n              </Form.Item>\r\n\r\n              <Form.Item {...tailLayout}>\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                  Submit\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n            {showErrorMsg ? (\r\n              <span style={{ color: \"red\" }}>*please check your Password </span>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            {showLockAccountMsg ? (\r\n              <span style={{ color: \"red\" }}>\r\n                Your account is locked due to some unwanted Action were\r\n                perfomrmed !! please contact with relavent autorized person !!\r\n              </span>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\n// export default withRouter(Login);\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}