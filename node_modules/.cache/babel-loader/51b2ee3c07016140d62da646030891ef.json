{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Manjusha\\\\Downloads\\\\frontendLTS\\\\src\\\\Components\\\\BattingGrid.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Collapse, Button } from \"antd\";\nimport \"../Components/BattingGrid.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Panel\n} = Collapse;\nlet battingOdds = 0;\nlet profit = 0;\n\nfunction BattingGrid(props) {\n  _s();\n\n  const [GameOnBet, setGameOnBet] = useState({});\n  const [StackValue, setStackValue] = useState();\n  const [calProfit, setcalProfit] = useState();\n  const [showSubmitBetBtn, setshowSubmitBetBtn] = useState(false);\n  const [currentBalance, setcurrentBalance] = useState(\"\");\n  const [showErrorMsg, setshowErrorMsg] = useState(false);\n  const [WalletID, setWalletID] = useState(\"\");\n  const [walletInfo, setwalletInfo] = useState({});\n  useEffect(() => {\n    setInterval(grabdata, 1000); // grabdata();\n  }, []);\n\n  const grabdata = () => {\n    async function getGameData() {\n      const selectedGameString = await localStorage.getItem(\"battingOpen\");\n      console.log(\"catch game\", selectedGameString);\n      const selectedGame = JSON.parse(selectedGameString);\n      setGameOnBet(selectedGame);\n    }\n\n    getGameData();\n  };\n\n  function getStackValue(e, stackValue) {\n    let availableBal = localStorage.getItem(\"availableBalance\");\n    console.log(\"battingBal\", availableBal, typeof availableBal);\n\n    if (availableBal) {\n      const walletInfo = JSON.parse(availableBal);\n      console.log(\"walletInfo\", walletInfo, typeof walletInfo);\n      setwalletInfo(walletInfo);\n      const cur_bal = walletInfo.availablePoint;\n      setcurrentBalance(cur_bal);\n      setWalletID(walletInfo.wallet_id); // let balance = parseFloat(availableBal);\n\n      console.log(\"player want to bat on\", stackValue, cur_bal);\n\n      if (stackValue < cur_bal) {\n        setshowSubmitBetBtn(true);\n        setshowErrorMsg(false);\n        setStackValue(stackValue);\n        console.log(\"onBatting\", StackValue, battingOdds);\n        battingOdds = GameOnBet.batpoint; //profit calculation\n\n        profit = parseFloat(battingOdds * StackValue - StackValue).toFixed(2);\n        console.log(\"expactedProfit\", profit);\n        setcalProfit(profit);\n        setshowSubmitBetBtn(true);\n      } else {\n        setshowSubmitBetBtn(false);\n        setshowErrorMsg(true);\n      }\n    } else {\n      setshowSubmitBetBtn(false);\n      setshowErrorMsg(true);\n    }\n  }\n\n  function submitMybet() {\n    const userInfo = localStorage.getItem(\"userDetails\"); // const userstringInfo = jes(userInfo);\n\n    var userJsonInfo = JSON.parse(`${userInfo}`);\n    console.log(\"battingSubmit +> Stack :\", StackValue, \"odds\", battingOdds, \"gamesInfo\", GameOnBet, \"userinfo\", userInfo);\n    console.log(new Date(new Date().toString().split(\"GMT\")[0] + \" UTC\").toISOString());\n    let backPoint = 0;\n    let layPoint = 0;\n\n    if (GameOnBet.odds === \"back\" || GameOnBet.odds === \"gray\") {\n      backPoint = battingOdds;\n    } else {\n      layPoint = battingOdds;\n    }\n\n    console.log(\"gameDetails\", GameOnBet.teamName, userJsonInfo.user_id, battingOdds, backPoint, layPoint); //1.battng hits !!\n\n    axios.post(\"http://127.0.0.1:8000/api/v1/batting/\", {\n      battingName: GameOnBet.teamName,\n      oddspoint: battingOdds,\n      backpoint: backPoint,\n      laypoint: layPoint,\n      stackpoint: StackValue,\n      matchInfo: 1,\n      eventStartTime: new Date(new Date().toString().split(\"GMT\")[0] + \" UTC\").toISOString(),\n      eventEndTime: new Date(new Date().toString().split(\"GMT\")[0] + \" UTC\").toISOString(),\n      batByUser: userJsonInfo.user_id\n    }).then(res => {\n      console.log(\"battingDataSent\", res); //balance update\n\n      const ava_bal = currentBalance;\n      console.log(\"available_Balance\", currentBalance, typeof currentBalance);\n      var parseBal = parseFloat(ava_bal).toFixed(2);\n      var bal = parseInt(parseBal);\n      console.log(\"available_Balance1\", bal, typeof bal);\n      const updatedbal = bal - StackValue;\n      console.log(\"remainingBal\", updatedbal, typeof updatedbal); //updated walletBalance\n\n      axios.put(`http://127.0.0.1:8000/api/v1/wallet/${walletInfo.id}/`, {\n        availablePoint: updatedbal,\n        wallet_id: walletInfo.wallet_id\n      }).then(res => {\n        console.log(\"Wallet_updated\", res); //update AccountTxn\n\n        axios.post(`http://127.0.0.1:8000/api/v1/account/`, {\n          dabitedPoint: StackValue,\n          description: GameOnBet.teamName,\n          account_id: walletInfo.id\n        }).then(res => {\n          console.log(\"Account_updated\", res);\n          window.location.reload();\n        }).then(err => console.log(\"Account_updatedError\", err));\n      }).then(err => console.log(\"Wallet_updatedError\", err));\n    }).catch(err => {\n      console.log(\"battingDataSentError\", err);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Collapse, {\n      accordion: true,\n      defaultActiveKey: [\"1\", \"2\"],\n      children: [/*#__PURE__*/_jsxDEV(Panel, {\n        header: \"Place Bet\",\n        style: {\n          padding: \"0px 0px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"batting_place\",\n          style: {\n            backgroundColor: GameOnBet.bgcolor\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              colSpan: \"2\",\n              children: \"Bet For\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Odds\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Stake\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Profit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"2\",\n              style: {\n                fontWeight: \"600\"\n              },\n              children: GameOnBet.teamName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                fontWeight: \"600\"\n              },\n              children: GameOnBet.batpoint\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                fontWeight: \"600\"\n              },\n              children: StackValue ? StackValue : 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                fontWeight: \"600\"\n              },\n              children: calProfit ? calProfit : 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                backgroundColor: GameOnBet.bgcolor,\n                color: \"white\",\n                fontWeight: \"600\"\n              },\n              onClick: e => {\n                getStackValue(e, 1000);\n              },\n              children: \"1000\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                backgroundColor: GameOnBet.bgcolor,\n                color: \"white\",\n                fontWeight: \"600\"\n              },\n              onClick: e => {\n                getStackValue(e, 5000);\n              },\n              children: \"5000\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                backgroundColor: GameOnBet.bgcolor,\n                color: \"white\",\n                fontWeight: \"600\"\n              },\n              onClick: e => {\n                getStackValue(e, 10000);\n              },\n              children: \"10000\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                backgroundColor: GameOnBet.bgcolor,\n                color: \"white\",\n                fontWeight: \"600\"\n              },\n              onClick: e => {\n                getStackValue(e, 20000);\n              },\n              children: \"20000\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                backgroundColor: GameOnBet.bgcolor,\n                color: \"white\",\n                fontWeight: \"600\"\n              },\n              onClick: e => {\n                getStackValue(e, 50000);\n              },\n              children: \"50000\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                backgroundColor: GameOnBet.bgcolor,\n                color: \"white\",\n                fontWeight: \"600\"\n              },\n              onClick: e => {\n                getStackValue(e, 100000);\n              },\n              children: \"100000\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                backgroundColor: GameOnBet.bgcolor,\n                color: \"white\",\n                fontWeight: \"600\"\n              },\n              onClick: e => {\n                getStackValue(e, 250000);\n              },\n              children: \"250000\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                backgroundColor: GameOnBet.bgcolor,\n                color: \"white\",\n                fontWeight: \"600\"\n              },\n              onClick: e => {\n                getStackValue(e, 500000);\n              },\n              children: \"500000\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                backgroundColor: GameOnBet.bgcolor,\n                color: \"white\",\n                fontWeight: \"600\"\n              },\n              onClick: e => {\n                getStackValue(e, 1000000);\n              },\n              children: \"1000000\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                backgroundColor: GameOnBet.bgcolor,\n                color: \"white\",\n                fontWeight: \"600\"\n              },\n              onClick: e => {\n                getStackValue(e, 2500000);\n              },\n              children: \"2500000\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), showErrorMsg ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" Insuffecient Balance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 27\n        }, this) : \"\", showSubmitBetBtn ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"odd_container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"odd__teamName\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"primary\",\n                style: {\n                  fontWeight: \"500\"\n                },\n                children: \"Reset\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"odd__point\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \" \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"odd__point\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"primary\",\n                style: {\n                  backgroundColor: \"green\",\n                  fontWeight: \"500\"\n                },\n                onClick: () => {\n                  submitMybet();\n                },\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 13\n        }, this) : \"\"]\n      }, \"1\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Panel, {\n        header: \"My Bet\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" no text to test \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this)\n      }, \"2\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(BattingGrid, \"yWSaXwiWZe9IQTawuA2WioQf90A=\");\n\n_c = BattingGrid;\nexport default BattingGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"BattingGrid\");","map":{"version":3,"sources":["C:/Users/Manjusha/Downloads/frontendLTS/src/Components/BattingGrid.js"],"names":["React","useEffect","useState","Collapse","Button","axios","Panel","battingOdds","profit","BattingGrid","props","GameOnBet","setGameOnBet","StackValue","setStackValue","calProfit","setcalProfit","showSubmitBetBtn","setshowSubmitBetBtn","currentBalance","setcurrentBalance","showErrorMsg","setshowErrorMsg","WalletID","setWalletID","walletInfo","setwalletInfo","setInterval","grabdata","getGameData","selectedGameString","localStorage","getItem","console","log","selectedGame","JSON","parse","getStackValue","e","stackValue","availableBal","cur_bal","availablePoint","wallet_id","batpoint","parseFloat","toFixed","submitMybet","userInfo","userJsonInfo","Date","toString","split","toISOString","backPoint","layPoint","odds","teamName","user_id","post","battingName","oddspoint","backpoint","laypoint","stackpoint","matchInfo","eventStartTime","eventEndTime","batByUser","then","res","ava_bal","parseBal","bal","parseInt","updatedbal","put","id","dabitedPoint","description","account_id","window","location","reload","err","catch","padding","backgroundColor","bgcolor","fontWeight","color"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Collapse, Button } from \"antd\";\r\nimport \"../Components/BattingGrid.css\";\r\nimport axios from \"axios\";\r\nconst { Panel } = Collapse;\r\nlet battingOdds = 0;\r\nlet profit = 0;\r\nfunction BattingGrid(props) {\r\n  const [GameOnBet, setGameOnBet] = useState({});\r\n  const [StackValue, setStackValue] = useState();\r\n  const [calProfit, setcalProfit] = useState();\r\n  const [showSubmitBetBtn, setshowSubmitBetBtn] = useState(false);\r\n  const [currentBalance, setcurrentBalance] = useState(\"\");\r\n  const [showErrorMsg, setshowErrorMsg] = useState(false);\r\n  const [WalletID, setWalletID] = useState(\"\");\r\n  const [walletInfo, setwalletInfo] = useState({});\r\n  useEffect(() => {\r\n    setInterval(grabdata, 1000);\r\n    // grabdata();\r\n  }, []);\r\n  const grabdata = () => {\r\n    async function getGameData() {\r\n      const selectedGameString = await localStorage.getItem(\"battingOpen\");\r\n      console.log(\"catch game\", selectedGameString);\r\n      const selectedGame = JSON.parse(selectedGameString);\r\n      setGameOnBet(selectedGame);\r\n    }\r\n    getGameData();\r\n  };\r\n  function getStackValue(e, stackValue) {\r\n    let availableBal = localStorage.getItem(\"availableBalance\");\r\n    console.log(\"battingBal\", availableBal, typeof availableBal);\r\n    if (availableBal) {\r\n      const walletInfo = JSON.parse(availableBal);\r\n      console.log(\"walletInfo\", walletInfo, typeof walletInfo);\r\n      setwalletInfo(walletInfo);\r\n      const cur_bal = walletInfo.availablePoint;\r\n      setcurrentBalance(cur_bal);\r\n      setWalletID(walletInfo.wallet_id);\r\n      // let balance = parseFloat(availableBal);\r\n      console.log(\"player want to bat on\", stackValue, cur_bal);\r\n      if (stackValue < cur_bal) {\r\n        setshowSubmitBetBtn(true);\r\n        setshowErrorMsg(false);\r\n        setStackValue(stackValue);\r\n        console.log(\"onBatting\", StackValue, battingOdds);\r\n        battingOdds = GameOnBet.batpoint;\r\n\r\n        //profit calculation\r\n        profit = parseFloat(battingOdds * StackValue - StackValue).toFixed(2);\r\n\r\n        console.log(\"expactedProfit\", profit);\r\n        setcalProfit(profit);\r\n        setshowSubmitBetBtn(true);\r\n      } else {\r\n        setshowSubmitBetBtn(false);\r\n        setshowErrorMsg(true);\r\n      }\r\n    } else {\r\n      setshowSubmitBetBtn(false);\r\n      setshowErrorMsg(true);\r\n    }\r\n  }\r\n  function submitMybet() {\r\n    const userInfo = localStorage.getItem(\"userDetails\");\r\n    // const userstringInfo = jes(userInfo);\r\n    var userJsonInfo = JSON.parse(`${userInfo}`);\r\n\r\n    console.log(\r\n      \"battingSubmit +> Stack :\",\r\n      StackValue,\r\n      \"odds\",\r\n      battingOdds,\r\n      \"gamesInfo\",\r\n      GameOnBet,\r\n      \"userinfo\",\r\n      userInfo\r\n    );\r\n    console.log(\r\n      new Date(new Date().toString().split(\"GMT\")[0] + \" UTC\").toISOString()\r\n    );\r\n    let backPoint = 0;\r\n    let layPoint = 0;\r\n\r\n    if (GameOnBet.odds === \"back\" || GameOnBet.odds === \"gray\") {\r\n      backPoint = battingOdds;\r\n    } else {\r\n      layPoint = battingOdds;\r\n    }\r\n    console.log(\r\n      \"gameDetails\",\r\n      GameOnBet.teamName,\r\n      userJsonInfo.user_id,\r\n      battingOdds,\r\n      backPoint,\r\n      layPoint\r\n    );\r\n\r\n    //1.battng hits !!\r\n    axios\r\n      .post(\"http://127.0.0.1:8000/api/v1/batting/\", {\r\n        battingName: GameOnBet.teamName,\r\n        oddspoint: battingOdds,\r\n        backpoint: backPoint,\r\n        laypoint: layPoint,\r\n        stackpoint: StackValue,\r\n        matchInfo: 1,\r\n        eventStartTime: new Date(\r\n          new Date().toString().split(\"GMT\")[0] + \" UTC\"\r\n        ).toISOString(),\r\n        eventEndTime: new Date(\r\n          new Date().toString().split(\"GMT\")[0] + \" UTC\"\r\n        ).toISOString(),\r\n        batByUser: userJsonInfo.user_id,\r\n      })\r\n      .then((res) => {\r\n        console.log(\"battingDataSent\", res);\r\n\r\n        //balance update\r\n        const ava_bal = currentBalance;\r\n        console.log(\"available_Balance\", currentBalance, typeof currentBalance);\r\n        var parseBal = parseFloat(ava_bal).toFixed(2);\r\n        var bal = parseInt(parseBal);\r\n        console.log(\"available_Balance1\", bal, typeof bal);\r\n        const updatedbal = bal - StackValue;\r\n        console.log(\"remainingBal\", updatedbal, typeof updatedbal);\r\n        //updated walletBalance\r\n        axios\r\n          .put(`http://127.0.0.1:8000/api/v1/wallet/${walletInfo.id}/`, {\r\n            availablePoint: updatedbal,\r\n            wallet_id: walletInfo.wallet_id,\r\n          })\r\n          .then((res) => {\r\n            console.log(\"Wallet_updated\", res);\r\n\r\n            //update AccountTxn\r\n            axios\r\n              .post(`http://127.0.0.1:8000/api/v1/account/`, {\r\n                dabitedPoint: StackValue,\r\n                description: GameOnBet.teamName,\r\n                account_id: walletInfo.id,\r\n              })\r\n              .then((res) => {\r\n                console.log(\"Account_updated\", res);\r\n                window.location.reload();\r\n              })\r\n              .then((err) => console.log(\"Account_updatedError\", err));\r\n          })\r\n          .then((err) => console.log(\"Wallet_updatedError\", err));\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"battingDataSentError\", err);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Collapse accordion defaultActiveKey={[\"1\", \"2\"]}>\r\n        <Panel\r\n          header=\"Place Bet\"\r\n          key=\"1\"\r\n          style={{\r\n            padding: \"0px 0px\",\r\n          }}\r\n        >\r\n          <table\r\n            className=\"batting_place\"\r\n            style={{ backgroundColor: GameOnBet.bgcolor }}\r\n          >\r\n            <tr>\r\n              <th colSpan=\"2\">Bet For</th>\r\n              <th>Odds</th>\r\n              <th>Stake</th>\r\n              <th>Profit</th>\r\n            </tr>\r\n            <tr>\r\n              <td\r\n                colSpan=\"2\"\r\n                style={{\r\n                  fontWeight: \"600\",\r\n                }}\r\n              >\r\n                {GameOnBet.teamName}\r\n              </td>\r\n              <td\r\n                style={{\r\n                  fontWeight: \"600\",\r\n                }}\r\n              >\r\n                {GameOnBet.batpoint}\r\n              </td>\r\n              <td\r\n                style={{\r\n                  fontWeight: \"600\",\r\n                }}\r\n              >\r\n                {StackValue ? StackValue : 0}\r\n              </td>\r\n              <td\r\n                style={{\r\n                  fontWeight: \"600\",\r\n                }}\r\n              >\r\n                {calProfit ? calProfit : 0}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td\r\n                style={{\r\n                  backgroundColor: GameOnBet.bgcolor,\r\n                  color: \"white\",\r\n                  fontWeight: \"600\",\r\n                }}\r\n                onClick={(e) => {\r\n                  getStackValue(e, 1000);\r\n                }}\r\n              >\r\n                1000\r\n              </td>\r\n              <td\r\n                style={{\r\n                  backgroundColor: GameOnBet.bgcolor,\r\n                  color: \"white\",\r\n                  fontWeight: \"600\",\r\n                }}\r\n                onClick={(e) => {\r\n                  getStackValue(e, 5000);\r\n                }}\r\n              >\r\n                5000\r\n              </td>\r\n              <td\r\n                style={{\r\n                  backgroundColor: GameOnBet.bgcolor,\r\n                  color: \"white\",\r\n                  fontWeight: \"600\",\r\n                }}\r\n                onClick={(e) => {\r\n                  getStackValue(e, 10000);\r\n                }}\r\n              >\r\n                10000\r\n              </td>\r\n              <td\r\n                style={{\r\n                  backgroundColor: GameOnBet.bgcolor,\r\n                  color: \"white\",\r\n                  fontWeight: \"600\",\r\n                }}\r\n                onClick={(e) => {\r\n                  getStackValue(e, 20000);\r\n                }}\r\n              >\r\n                20000\r\n              </td>\r\n\r\n              <td\r\n                style={{\r\n                  backgroundColor: GameOnBet.bgcolor,\r\n                  color: \"white\",\r\n                  fontWeight: \"600\",\r\n                }}\r\n                onClick={(e) => {\r\n                  getStackValue(e, 50000);\r\n                }}\r\n              >\r\n                50000\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td\r\n                style={{\r\n                  backgroundColor: GameOnBet.bgcolor,\r\n                  color: \"white\",\r\n                  fontWeight: \"600\",\r\n                }}\r\n                onClick={(e) => {\r\n                  getStackValue(e, 100000);\r\n                }}\r\n              >\r\n                100000\r\n              </td>\r\n              <td\r\n                style={{\r\n                  backgroundColor: GameOnBet.bgcolor,\r\n                  color: \"white\",\r\n                  fontWeight: \"600\",\r\n                }}\r\n                onClick={(e) => {\r\n                  getStackValue(e, 250000);\r\n                }}\r\n              >\r\n                250000\r\n              </td>\r\n              <td\r\n                style={{\r\n                  backgroundColor: GameOnBet.bgcolor,\r\n                  color: \"white\",\r\n                  fontWeight: \"600\",\r\n                }}\r\n                onClick={(e) => {\r\n                  getStackValue(e, 500000);\r\n                }}\r\n              >\r\n                500000\r\n              </td>\r\n              <td\r\n                style={{\r\n                  backgroundColor: GameOnBet.bgcolor,\r\n                  color: \"white\",\r\n                  fontWeight: \"600\",\r\n                }}\r\n                onClick={(e) => {\r\n                  getStackValue(e, 1000000);\r\n                }}\r\n              >\r\n                1000000\r\n              </td>\r\n              <td\r\n                style={{\r\n                  backgroundColor: GameOnBet.bgcolor,\r\n                  color: \"white\",\r\n                  fontWeight: \"600\",\r\n                }}\r\n                onClick={(e) => {\r\n                  getStackValue(e, 2500000);\r\n                }}\r\n              >\r\n                2500000\r\n              </td>\r\n            </tr>\r\n          </table>\r\n          {showErrorMsg ? <p> Insuffecient Balance</p> : \"\"}\r\n          {showSubmitBetBtn ? (\r\n            <div className=\"odd_container\">\r\n              <div className=\"odd__teamName\">\r\n                <span>\r\n                  <Button type=\"primary\" style={{ fontWeight: \"500\" }}>\r\n                    Reset\r\n                  </Button>\r\n                </span>\r\n              </div>\r\n              <div className=\"odd__point\">\r\n                <span> </span>\r\n              </div>\r\n              <div className=\"odd__point\">\r\n                <span>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    style={{ backgroundColor: \"green\", fontWeight: \"500\" }}\r\n                    onClick={() => {\r\n                      submitMybet();\r\n                    }}\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </span>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </Panel>\r\n        <Panel header=\"My Bet\" key=\"2\">\r\n          <p> no text to test </p>\r\n        </Panel>\r\n      </Collapse>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default BattingGrid;\r\n"]},"metadata":{},"sourceType":"module"}